{"ast":null,"code":"var _jsxFileName = \"/Users/pingruchou/Desktop/sort_react/sorting/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\nimport bubbleSort from './sort_algorithm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Line extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      isHover: false,\n      style: {\n        left: this.props.position,\n        borderColor: this.props.color,\n        top: 600 - parseInt(this.props.value)\n      }\n    };\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n  }\n\n  handleMouseOver() {\n    this.setState({\n      isHover: true\n    });\n    const obj = document.getElementById('item_value');\n    obj.innerHTML = this.props.value;\n    this.setState({\n      style: { ...this.state.style,\n        borderColor: \"#2894FF\"\n      }\n    });\n  }\n\n  handleMouseOut() {\n    this.setState({\n      isHover: false\n    });\n    const obj = document.getElementById('item_value');\n    obj.innerHTML = \"\";\n    this.setState({\n      style: { ...this.state.style,\n        borderColor: '#FFD2D2'\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vl\",\n      style: this.state.style,\n      onMouseOver: this.handleMouseOver,\n      onMouseOut: this.handleMouseOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass SortVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: null,\n      history: [Array(200).fill(null)],\n      isSetUp: false,\n      counter: 0,\n      currentStep: 0\n    };\n    document.body.style = 'background-color : #4F4F4F';\n  }\n\n  createLines() {\n    const input = this.state.history.slice(0, 1);\n    const lines = input.map((value, index) => {\n      let percentage = 100 / (input.length + 1) * index;\n      percentage = percentage.toString() + \"%\"; // insert keyframe to stylesheet for every line\n      // let animationName = 'grow' + value.toString()\n      // let h = 600 - parseInt(value);\n      // let keyFrame = `@keyframes ${animationName}{\n      // \t0% {\n      // \t\ttop: 500px;\n      // \t\tbottom: 100px;\n      // \t  }\n      // \t100%{\n      // \t\ttop: ${h}px;\n      // \t\tbottom: 100px;\n      // \t  }\n      // }`;\n      // let styleSheet = document.styleSheets[0];\n      // styleSheet.insertRule(keyFrame, styleSheet.cssRules.length);\n      // let key = this.state.counter.toString() + \"_\" + index.toString() + '_' + value.toString();\n\n      let key = \"input-\" + index.toString();\n      return /*#__PURE__*/_jsxDEV(Line, {\n        id: key,\n        position: percentage,\n        color: \"#FFD2D2\",\n        value: value\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this);\n    }); // this.setState({lines:lines});\n\n    return lines;\n  }\n\n  lineUpdate() {// const input = this.state.input_array;\n    // if(!this.state.isSetUp){\n    // \tthis.setState({isSetUp:true});\n    // \tconst lines = this.createLines();\n    // \tthis.setState({lines:lines});\n    // }else{\n    // \tvar new_lines = this.state.lines;\n    // \tconst lines = this.createLines();\n    // \tthis.setState({lines:lines}, ()=>{\n    // \t\tconsole.log(this.state.lines);\n    // \t});\n    // \t// for(var i = 0 ; i < input.length; i++){\n    // \t// \t// console.log(new_lines);\n    // \t// \t// new_lines[0].props.value = Math.random() * 500;\n    // \t// }\n    // }\n  }\n\n  randomInput() {\n    var input = [Array.from({\n      length: 200\n    }, () => Math.floor(Math.random() * 400))];\n    var history = [Array(200).fill(null)].concat(input);\n    var counter = this.state.counter;\n    this.setState({\n      history: history,\n      counter: counter + 1,\n      currentStep: 1\n    });\n  }\n\n  visualize() {\n    const history = bubbleSort(this);\n  }\n\n  render() {\n    const input = this.state.history[this.state.currentStep];\n    const lines = input.map((value, index) => {\n      if (this.state.currentStep != 0) {\n        let percentage = 100 / (input.length + 1) * index;\n        percentage = percentage.toString() + \"%\";\n        let cnt = this.state.counter;\n        let key = cnt.toString() + '_' + index.toString();\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-link\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            id: index,\n            position: percentage,\n            color: \"#FFD2D2\",\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 6\n        }, this);\n      } else {\n        return null;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"bg-secondary navbar navbar-expand-lg p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse navbar-collapse\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item mx-4 pt-2\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"nav-link text-white\",\n                  value: \"Bubble_Sort\",\n                  children: \"Bubble Sort\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"nav-link text-white\",\n                  value: \"Insertion_Sort\",\n                  children: \"Insertion Sort\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"nav-link text-white\",\n                  value: \"Quick_Sort\",\n                  children: \"Quick Sort\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"nav-link text-white\",\n                  value: \"Merge_Sort\",\n                  children: \"Merge Sort\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Input : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.randomInput(),\n                children: \"Randomize Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.visualize(),\n                children: \"Visualize\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boundary\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Selection Item Value : \", /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"item_value\",\n            style: {\n              color: 'White'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 6\n        }, this), lines]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(SortVisualizer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 189,\n  columnNumber: 2\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/pingruchou/Desktop/sort_react/sorting/src/index.js"],"names":["React","ReactDOM","styled","bubbleSort","Line","Component","constructor","props","state","value","isHover","style","left","position","borderColor","color","top","parseInt","handleMouseOver","bind","handleMouseOut","setState","obj","document","getElementById","innerHTML","render","SortVisualizer","lines","history","Array","fill","isSetUp","counter","currentStep","body","createLines","input","slice","map","index","percentage","length","toString","key","lineUpdate","randomInput","from","Math","floor","random","concat","visualize","cnt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\nimport bubbleSort from './sort_algorithm.js'\n\nclass Line extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue:this.props.value,\n\t\t\tisHover:false,\n\t\t\tstyle:{\n\t\t\t\tleft:this.props.position,\n\t\t\t\tborderColor:this.props.color,\n\t\t\t\ttop: 600 - parseInt(this.props.value),\n\t\t\t}\n\t\t}\n\n\t\tthis.handleMouseOver = this.handleMouseOver.bind(this);\n\t\tthis.handleMouseOut = this.handleMouseOut.bind(this);\n\t}\n\n\n\thandleMouseOver(){\n\t\tthis.setState({\n\t\t\tisHover:true,\n\t\t})\n\t\tconst obj = document.getElementById('item_value')\n\t\tobj.innerHTML = this.props.value;\n\t\tthis.setState({style:{...this.state.style, borderColor:\"#2894FF\"}});\n\t}\n\n\thandleMouseOut(){\n\t\tthis.setState({\n\t\t\tisHover:false,\n\t\t})\n\t\tconst obj = document.getElementById('item_value')\n\t\tobj.innerHTML = \"\";\n\t\tthis.setState({style:{...this.state.style, borderColor:'#FFD2D2'}});\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div className='vl' style={this.state.style} onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}></div>\n\t\t)\n\t}\t\n\t\n\n\n}\n\nclass SortVisualizer extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlines : null,\n\t\t\thistory : [Array(200).fill(null)],\n\t\t\tisSetUp:false,\n\t\t\tcounter:0,\n\t\t\tcurrentStep:0,\n\t\t}\n\t\tdocument.body.style = 'background-color : #4F4F4F';\n\t}\n\n\tcreateLines(){\n\t\tconst input = this.state.history.slice(0,1);\n\t\tconst lines = input.map((value, index) => {\n\t\t\tlet percentage = 100 / (input.length + 1) * index;\n\t\t\tpercentage = percentage.toString() + \"%\";\n\t\t\t\n\t\t\t// insert keyframe to stylesheet for every line\n\t\t\t// let animationName = 'grow' + value.toString()\n\t\t\t// let h = 600 - parseInt(value);\n\t\t\t// let keyFrame = `@keyframes ${animationName}{\n\t\t\t// \t0% {\n\t\t\t// \t\ttop: 500px;\n\t\t\t// \t\tbottom: 100px;\n\t\t\t// \t  }\n\t\t\t// \t100%{\n\t\t\t// \t\ttop: ${h}px;\n\t\t\t// \t\tbottom: 100px;\n\t\t\t// \t  }\n\t\t\t// }`;\n\t\t\t// let styleSheet = document.styleSheets[0];\n\t\t\t// styleSheet.insertRule(keyFrame, styleSheet.cssRules.length);\n\t\t\t// let key = this.state.counter.toString() + \"_\" + index.toString() + '_' + value.toString();\n\t\t\tlet key = \"input-\" + index.toString();\n\t\t\treturn (\n\t\t\t\t\t<Line id={key} position={percentage} color='#FFD2D2' key={key} value={value}/>\n\t\t\t\t);\n\t\t\t});\n\t\t// this.setState({lines:lines});\n\t\treturn lines;\n\t}\n\n\tlineUpdate(){\n\t\t// const input = this.state.input_array;\n\t\t// if(!this.state.isSetUp){\n\t\t// \tthis.setState({isSetUp:true});\n\t\t// \tconst lines = this.createLines();\n\t\t// \tthis.setState({lines:lines});\n\t\t// }else{\n\t\t// \tvar new_lines = this.state.lines;\n\t\t// \tconst lines = this.createLines();\n\t\t// \tthis.setState({lines:lines}, ()=>{\n\t\t// \t\tconsole.log(this.state.lines);\n\t\t// \t});\n\t\t// \t// for(var i = 0 ; i < input.length; i++){\n\t\t// \t// \t// console.log(new_lines);\n\t\t// \t// \t// new_lines[0].props.value = Math.random() * 500;\n\n\t\t// \t// }\n\t\t// }\n\t}\n\n\trandomInput(){\n\t\tvar input = [Array.from({length:200}, () => Math.floor(Math.random() * 400))];\n\t\tvar history = [Array(200).fill(null)].concat(input);\n\t\tvar counter = this.state.counter;\n\t\tthis.setState({history:history, counter:counter+1, currentStep:1});\n\t}\n\n\tvisualize(){\n\t\tconst history = bubbleSort(this);\n\n\t}\n\n\trender(){\n\t\t\n\t\tconst input = this.state.history[this.state.currentStep];\n\t\t\n\t\tconst lines = input.map((value, index) => {\n\t\t\tif(this.state.currentStep != 0){\n\t\t\t\tlet percentage = 100 / (input.length + 1) * index;\n\t\t\t\tpercentage = percentage.toString() + \"%\";\n\t\t\t\tlet cnt = this.state.counter;\n\t\t\t\tlet key = cnt.toString() + '_' + index.toString();\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<li className=\"nav-link\" key={key}>\n\t\t\t\t\t\t<Line id={index} position={percentage} color='#FFD2D2' value={value}/>\n\t\t\t\t\t</li>\n\t\t\t\t\t);\t\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\t\n\t\t});\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<nav className=\"bg-secondary navbar navbar-expand-lg p-4\">\n\t\t\t\t\t<div className=\"collapse navbar-collapse\">\n\t\t\t\t\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item mx-4 pt-2\">\n\t\t\t\t\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Bubble_Sort\">Bubble Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Insertion_Sort\">Insertion Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Quick_Sort\">Quick Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Merge_Sort\">Merge Sort</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t<label>Input : </label>\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.randomInput()}>Randomize Input</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.visualize()}>Visualize</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t\n\t\t\t\t<div className=\"boundary\">\n\t\t\t\t\t<label>Selection Item Value : <label id='item_value' style={{color:'White'}}></label></label>\n\t\t\t\t\t{lines}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n\nReactDOM.render(\n\t<SortVisualizer />,\n\tdocument.getElementById('root'),\n);\n\n\n"]},"metadata":{},"sourceType":"module"}