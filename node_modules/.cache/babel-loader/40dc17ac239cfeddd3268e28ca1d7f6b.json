{"ast":null,"code":"const bubbleSort = function (parent) {\n  var ary = parent.state.history.slice(0, 1)[0];\n  var history = [];\n  var operations = [];\n\n  for (var i = 0; i < ary.length; i++) {\n    for (var j = 0; j < ary.length - i - 1; j++) {\n      if (ary[j] > ary[j + 1]) {\n        var tmp = ary[j + 1];\n        ary[j + 1] = ary[j];\n        ary[j] = tmp;\n        history = history.concat([ary.slice()]);\n        operations = operations.concat([[j, j + 1]]);\n      }\n    }\n  }\n\n  return [history, operations];\n};\n\nconst selectionSort = parent => {\n  var ary = parent.state.history.slice(0, 1)[0];\n  var history = [];\n  var operations = [];\n  var max_ = -1;\n  var max_idnex = -1;\n\n  for (var i = 0; i < ary.length; i++) {\n    max_ = -1;\n\n    for (var j = 0; j < ary.length - i; j++) {\n      if (ary[j] > max_) {\n        max_ = ary[j];\n        max_idnex = j;\n      }\n    }\n\n    var tmp = ary[ary.length - i - 1];\n    ary[ary.length - i - 1] = max_;\n    ary[max_idnex] = tmp;\n    history = history.concat([ary.slice()]);\n    operations = operations.concat([[max_idnex, ary.length - i - 1]]);\n  }\n\n  return [history, operations];\n};\n\nconst insertionSort = parent => {\n  var ary = parent.state.history.slice(0, 1)[0];\n  var history = [];\n  var operations = [];\n  var index = -1;\n\n  for (var i = 0; i < ary.length; i++) {\n    index = i;\n    var tmp = ary[i];\n\n    for (var j = 0; j < i; j++) {\n      if (ary[j] > ary[i]) {\n        index = j;\n        break;\n      }\n    }\n\n    for (var j = i; j > index; j--) {\n      ary[j] = ary[j - 1];\n      history = history.concat([ary.slice()]);\n      operations = operations.concat([[j, i - 1]]);\n    }\n\n    ary[index] = tmp;\n    history = history.concat([ary.slice()]);\n    operations = operations.concat([[index, i]]);\n  }\n\n  return [history, operations];\n};\n\nconst quickSort = input_array => {\n  var stack = [];\n  var history = [];\n  var operations = [];\n  var start = 0,\n      end = input_array.length - 1;\n  stack.push([start, end]);\n\n  while (stack.length > 0) {\n    [start, end] = stack.pop();\n    var [pivot_index, history_, operations_] = partition(input_array, start, end);\n    history = history.concat(history_);\n    operations = operations.concat(operations_);\n\n    if (pivot_index - 1 > start) {\n      stack.push([start, pivot_index - 1]);\n    }\n\n    if (pivot_index + 1 < end) {\n      stack.push([pivot_index + 1, end]);\n    }\n  }\n\n  return [history, operations];\n};\n\nconst swap = (A, a, b) => {\n  var tmp = A[a];\n  A[a] = A[b];\n  A[b] = tmp;\n};\n\nconst partition = (input, start, end) => {\n  var pivot = input[end];\n  var pivot_index = start;\n  var history = [];\n  var operations = [];\n\n  for (var i = start; i < end; i++) {\n    if (input[i] <= pivot) {\n      swap(input, i, pivot_index);\n      history.push(input.slice());\n      operations.push([i, pivot_index]);\n      pivot_index += 1;\n    }\n  }\n\n  swap(input, pivot_index, end);\n  return [pivot_index, history, operations];\n};\n\nconst mergeSort = parent => {};\n\nconst merge = (input, start, mid, end) => {\n  var tmp = [];\n};\n\nexport { bubbleSort, selectionSort, insertionSort, quickSort };","map":{"version":3,"sources":["/Users/pingruchou/Desktop/sort_react/sorting/src/sort_algorithm.js"],"names":["bubbleSort","parent","ary","state","history","slice","operations","i","length","j","tmp","concat","selectionSort","max_","max_idnex","insertionSort","index","quickSort","input_array","stack","start","end","push","pop","pivot_index","history_","operations_","partition","swap","A","a","b","input","pivot","mergeSort","merge","mid"],"mappings":"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","sourcesContent":["const bubbleSort = function(parent){\n\tvar ary = parent.state.history.slice(0, 1)[0];\n\tvar history = [];\n\tvar operations = [];\n\tfor(var i = 0; i < ary.length; i++){\n\t\tfor(var j = 0 ; j < ary.length - i - 1; j++){\n\t\t\tif(ary[j] > ary[j+1]){\n\t\t\t\tvar tmp = ary[j+1];\n\t\t\t\tary[j+1] = ary[j];\n\t\t\t\tary[j] = tmp;\n\t\t\t\thistory = history.concat([ary.slice()]);\n\t\t\t\toperations = operations.concat([[j, j+1]]);\n\t\t\t}\n\t\t}\n\t}\n\treturn [history, operations];\n}\n\nconst selectionSort = (parent) => {\n\tvar ary = parent.state.history.slice(0, 1)[0];\n\tvar history = [];\n\tvar operations = [];\n\tvar max_ = -1;\n\tvar max_idnex = -1;\n\tfor(var i = 0; i < ary.length; i++){\n\t\tmax_ = -1;\n\t\tfor(var j = 0 ; j < ary.length - i; j++){\n\t\t\tif(ary[j] > max_){\n\t\t\t\tmax_ = ary[j];\n\t\t\t\tmax_idnex = j;\n\t\t\t}\n\t\t}\n\t\tvar tmp = ary[ary.length - i - 1];\n\t\tary[ary.length - i - 1] = max_;\n\t\tary[max_idnex] = tmp;\n\t\thistory = history.concat([ary.slice()]);\n\t\toperations = operations.concat([[max_idnex, ary.length - i - 1]]);\n\t}\n\treturn [history, operations];\n}\n\nconst insertionSort = (parent) => {\n\tvar ary = parent.state.history.slice(0, 1)[0];\n\tvar history = [];\n\tvar operations = [];\n\tvar index = -1;\n\tfor(var i = 0; i < ary.length; i++){\n\t\tindex = i;\n\t\tvar tmp = ary[i];\n\t\tfor(var j = 0 ; j < i; j++){\n\t\t\tif(ary[j] > ary[i]){\n\t\t\t\tindex = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(var j = i; j > index; j--){\n\t\t\tary[j] = ary[j-1];\n\t\t\thistory = history.concat([ary.slice()]);\n\t\t\toperations = operations.concat([[j, i-1]]);\n\t\t}\n\t\tary[index] = tmp;\n\t\thistory = history.concat([ary.slice()]);\n\t\toperations = operations.concat([[index, i]]);\n\t}\n\treturn [history, operations];\n}\n\nconst quickSort = (input_array) => {\n\tvar stack = []\n\tvar history = [];\n\tvar operations = [];\n\tvar start = 0, end = input_array.length - 1;\n\tstack.push([start, end]);\n\twhile(stack.length > 0){\n\t\t\n\t\t[start, end] = stack.pop();\n\n\t\tvar [pivot_index, history_, operations_] = partition(input_array, start, end);\n\t\thistory = history.concat(history_);\n\t\toperations = operations.concat(operations_);\n\t\t\n\t\tif(pivot_index - 1 > start){\n\t\t\tstack.push([start, pivot_index - 1]);\n\t\t}\n\t\tif(pivot_index + 1 < end){\n\t\t\tstack.push([pivot_index+1, end]);\n\t\t}\n\t}\n\treturn [history, operations]\n\n}\n\nconst swap = (A, a, b) =>{\n\tvar tmp = A[a];\n\tA[a] = A[b];\n\tA[b] = tmp;\n}\n\nconst partition = (input, start, end) => {\n\n\tvar pivot = input[end];\n\tvar pivot_index = start;\n\tvar history = [];\n\tvar operations = [];\n\tfor(var i = start; i < end; i++){\n\t\tif(input[i] <= pivot){\n\t\t\tswap(input, i, pivot_index);\n\t\t\thistory.push(input.slice());\n\t\t\toperations.push([i, pivot_index]);\n\t\t\tpivot_index += 1;\n\t\t}\n\t}\n\tswap(input, pivot_index, end);\n\n\treturn [pivot_index, history, operations];\n}\n\nconst mergeSort = (parent) => {\n\n}\n\nconst merge = (input, start, mid, end) => {\n\n\tvar tmp = []\n\n}\n\nexport {bubbleSort, selectionSort, insertionSort, quickSort}\n\n"]},"metadata":{},"sourceType":"module"}