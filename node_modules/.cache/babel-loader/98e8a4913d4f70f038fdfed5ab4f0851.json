{"ast":null,"code":"const bubbleSort = function (parent) {\n  var ary = parent.state.history.slice(0, 1)[0];\n  var history = [];\n  var operations = [];\n\n  for (var i = 0; i < ary.length; i++) {\n    for (var j = 0; j < ary.length - i - 1; j++) {\n      if (ary[j] > ary[j + 1]) {\n        var tmp = ary[j + 1];\n        ary[j + 1] = ary[j];\n        ary[j] = tmp;\n        history = history.concat([ary.slice()]);\n        operations = operations.concat([[j, j + 1]]);\n      }\n    }\n  }\n\n  return [history, operations];\n};\n\nconst selectionSort = parent => {\n  var ary = parent.state.history.slice(0, 1)[0];\n  var history = [];\n  var operations = [];\n  var max_ = -1;\n  var max_idnex = -1;\n\n  for (var i = 0; i < ary.length; i++) {\n    max_ = -1;\n\n    for (var j = 0; j < ary.length - i; j++) {\n      if (ary[j] > max_) {\n        max_ = ary[j];\n        max_idnex = j;\n      }\n    }\n\n    var tmp = ary[ary.length - i - 1];\n    ary[ary.length - i - 1] = max_;\n    ary[max_idnex] = tmp;\n    history = history.concat([ary.slice()]);\n    operations = operations.concat([[max_idnex, ary.length - i - 1]]);\n  }\n\n  return [history, operations];\n};\n\nconst insertionSort = parent => {\n  var ary = parent.state.history.slice(0, 1)[0];\n  var history = [];\n  var operations = [];\n  var index = -1;\n\n  for (var i = 0; i < ary.length; i++) {\n    index = i;\n    var tmp = ary[i];\n\n    for (var j = 0; j < i; j++) {\n      if (ary[j] > ary[i]) {\n        index = j;\n        break;\n      }\n    }\n\n    for (var j = i; j > index; j--) {\n      ary[j] = ary[j - 1];\n      history = history.concat([ary.slice()]);\n      operations = operations.concat([[j, i - 1]]);\n    }\n\n    ary[index] = tmp;\n    history = history.concat([ary.slice()]);\n    operations = operations.concat([[index, i]]);\n  }\n\n  return [history, operations];\n};\n\nconst quickSort = input_array => {\n  if (input_array.length <= 1) {\n    return input_array;\n  }\n\n  var pivot_index = parseInt(Math.random() * input_array.length);\n  var pivot = input_array[pivot_index];\n  var pivot_l = [],\n      pivot_r = [],\n      pivot_list = [];\n\n  for (var i = 0; i < input_array.length; i++) {\n    if (i === pivot_index) {\n      pivot_list.push(pivot);\n    } else if (input_array[i] >= pivot) {\n      pivot_r.push(input_array[i]);\n    } else {\n      pivot_l.push(input_array[i]);\n    }\n  }\n\n  const left_side = quickSort(pivot_l);\n  const right_side = quickSort(pivot_r);\n};\n\nconst mergeSort = parent => {};\n\nexport { bubbleSort, selectionSort, insertionSort, quickSort };","map":{"version":3,"sources":["/Users/pingruchou/Desktop/sort_react/sorting/src/sort_algorithm.js"],"names":["bubbleSort","parent","ary","state","history","slice","operations","i","length","j","tmp","concat","selectionSort","max_","max_idnex","insertionSort","index","quickSort","input_array","pivot_index","parseInt","Math","random","pivot","pivot_l","pivot_r","pivot_list","push","left_side","right_side","mergeSort"],"mappings":"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","sourcesContent":["const bubbleSort = function(parent){\n\tvar ary = parent.state.history.slice(0, 1)[0];\n\tvar history = [];\n\tvar operations = [];\n\tfor(var i = 0; i < ary.length; i++){\n\t\tfor(var j = 0 ; j < ary.length - i - 1; j++){\n\t\t\tif(ary[j] > ary[j+1]){\n\t\t\t\tvar tmp = ary[j+1];\n\t\t\t\tary[j+1] = ary[j];\n\t\t\t\tary[j] = tmp;\n\t\t\t\thistory = history.concat([ary.slice()]);\n\t\t\t\toperations = operations.concat([[j, j+1]]);\n\t\t\t}\n\t\t}\n\t}\n\treturn [history, operations];\n}\n\nconst selectionSort = (parent) => {\n\tvar ary = parent.state.history.slice(0, 1)[0];\n\tvar history = [];\n\tvar operations = [];\n\tvar max_ = -1;\n\tvar max_idnex = -1;\n\tfor(var i = 0; i < ary.length; i++){\n\t\tmax_ = -1;\n\t\tfor(var j = 0 ; j < ary.length - i; j++){\n\t\t\tif(ary[j] > max_){\n\t\t\t\tmax_ = ary[j];\n\t\t\t\tmax_idnex = j;\n\t\t\t}\n\t\t}\n\t\tvar tmp = ary[ary.length - i - 1];\n\t\tary[ary.length - i - 1] = max_;\n\t\tary[max_idnex] = tmp;\n\t\thistory = history.concat([ary.slice()]);\n\t\toperations = operations.concat([[max_idnex, ary.length - i - 1]]);\n\t}\n\treturn [history, operations];\n}\n\nconst insertionSort = (parent) => {\n\tvar ary = parent.state.history.slice(0, 1)[0];\n\tvar history = [];\n\tvar operations = [];\n\tvar index = -1;\n\tfor(var i = 0; i < ary.length; i++){\n\t\tindex = i;\n\t\tvar tmp = ary[i];\n\t\tfor(var j = 0 ; j < i; j++){\n\t\t\tif(ary[j] > ary[i]){\n\t\t\t\tindex = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(var j = i; j > index; j--){\n\t\t\tary[j] = ary[j-1];\n\t\t\thistory = history.concat([ary.slice()]);\n\t\t\toperations = operations.concat([[j, i-1]]);\n\t\t}\n\t\tary[index] = tmp;\n\t\thistory = history.concat([ary.slice()]);\n\t\toperations = operations.concat([[index, i]]);\n\t}\n\treturn [history, operations];\n}\n\nconst quickSort = (input_array) => {\n\tif(input_array.length <= 1){\n\t\treturn input_array;\n\t}\n\tvar pivot_index = parseInt(Math.random() * input_array.length);\n\tvar pivot = input_array[pivot_index];\n\tvar pivot_l = [], pivot_r = [], pivot_list = [];\n\tfor(var i = 0; i < input_array.length; i++){\n\t\tif(i === pivot_index){\n\t\t\tpivot_list.push(pivot);\n\t\t}else if(input_array[i] >= pivot){\n\t\t\tpivot_r.push(input_array[i]);\n\t\t}else{\n\t\t\tpivot_l.push(input_array[i]);\n\t\t}\n\t}\n\tconst left_side = quickSort(pivot_l);\n\tconst right_side = quickSort(pivot_r);\n\t\n\n\t\n}\n\nconst mergeSort = (parent) => {\n\n}\n\n\nexport {bubbleSort, selectionSort, insertionSort, quickSort}\n\n"]},"metadata":{},"sourceType":"module"}