{"version":3,"sources":["sort_algorithm.js","index.js"],"names":["swap","A","a","b","tmp","partition","input","start","end","pivot","pivot_index","history","operations","i","push","slice","merge","mid","j","Array","fill","map","value","index","k","bar_colors","Line","props","handleMouseOver","setState","isHover","document","getElementById","innerHTML","style","state","borderColor","handleMouseOut","color","left","position","top","parseInt","className","this","onMouseOver","onMouseOut","React","Component","SortVisualizer","selectionChange","selection","randomInput","isRunning","console","log","from","length","Math","floor","random","counter","currentStep","animate","inputs","setTimeout","visualize","returnValue","input_array","ary","concat","bubbleSort","max_","max_idnex","selectionSort","insertionSort","stack","pop","history_","operations_","quickSort","high","m","min","hist","ops","mergeSort","lines","isSetUp","body","percentage","toString","key","includes","id","onChange","onClick","ReactDOM","render"],"mappings":"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","file":"static/js/main.b194e7b2.chunk.js","sourcesContent":["const bubbleSort = function(ary){\n\tvar history = [];\n\tvar operations = [];\n\tfor(var i = 0; i < ary.length; i++){\n\t\tfor(var j = 0 ; j < ary.length - i - 1; j++){\n\t\t\tif(ary[j] > ary[j+1]){\n\t\t\t\tvar tmp = ary[j+1];\n\t\t\t\tary[j+1] = ary[j];\n\t\t\t\tary[j] = tmp;\n\t\t\t\thistory = history.concat([ary.slice()]);\n\t\t\t\toperations = operations.concat([[j, j+1]]);\n\t\t\t}\n\t\t}\n\t}\n\treturn [history, operations];\n}\n\nconst selectionSort = (ary) => {\n\tvar history = [];\n\tvar operations = [];\n\tvar max_ = -1;\n\tvar max_idnex = -1;\n\tfor(var i = 0; i < ary.length; i++){\n\t\tmax_ = -1;\n\t\tfor(var j = 0 ; j < ary.length - i; j++){\n\t\t\tif(ary[j] > max_){\n\t\t\t\tmax_ = ary[j];\n\t\t\t\tmax_idnex = j;\n\t\t\t}\n\t\t}\n\t\tvar tmp = ary[ary.length - i - 1];\n\t\tary[ary.length - i - 1] = max_;\n\t\tary[max_idnex] = tmp;\n\t\thistory = history.concat([ary.slice()]);\n\t\toperations = operations.concat([[max_idnex, ary.length - i - 1]]);\n\t}\n\treturn [history, operations];\n}\n\nconst insertionSort = (ary) => {\n\tvar history = [];\n\tvar operations = [];\n\tvar index = -1;\n\tfor(var i = 0; i < ary.length; i++){\n\t\tindex = i;\n\t\tvar tmp = ary[i];\n\t\tfor(var j = 0 ; j < i; j++){\n\t\t\tif(ary[j] > ary[i]){\n\t\t\t\tindex = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(var k = i; k > index; k--){\n\t\t\tary[k] = ary[k-1];\n\t\t\thistory = history.concat([ary.slice()]);\n\t\t\toperations = operations.concat([[k, i-1]]);\n\t\t}\n\t\tary[index] = tmp;\n\t\thistory = history.concat([ary.slice()]);\n\t\toperations = operations.concat([[index, i]]);\n\t}\n\treturn [history, operations];\n}\n\nconst quickSort = (ary) => {\n\tvar stack = []\n\tvar history = [];\n\tvar operations = [];\n\tvar start = 0, end = ary.length - 1;\n\tstack.push([start, end]);\n\twhile(stack.length > 0){\n\t\t\n\t\t[start, end] = stack.pop();\n\n\t\tvar [pivot_index, history_, operations_] = partition(ary, start, end);\n\t\thistory = history.concat(history_);\n\t\toperations = operations.concat(operations_);\n\t\t\n\t\tif(pivot_index - 1 > start){\n\t\t\tstack.push([start, pivot_index - 1]);\n\t\t}\n\t\tif(pivot_index + 1 < end){\n\t\t\tstack.push([pivot_index+1, end]);\n\t\t}\n\t}\n\treturn [history, operations]\n\n}\n\nconst swap = (A, a, b) =>{\n\tvar tmp = A[a];\n\tA[a] = A[b];\n\tA[b] = tmp;\n}\n\nconst partition = (input, start, end) => {\n\n\tvar pivot = input[end];\n\tvar pivot_index = start;\n\tvar history = [];\n\tvar operations = [];\n\tfor(var i = start; i < end; i++){\n\t\tif(input[i] <= pivot){\n\t\t\tswap(input, i, pivot_index);\n\t\t\thistory.push(input.slice());\n\t\t\toperations.push([i, pivot_index]);\n\t\t\tpivot_index += 1;\n\t\t}\n\t}\n\tswap(input, pivot_index, end);\n\n\treturn [pivot_index, history, operations];\n}\n\nconst mergeSort = (ary) => {\n\n\tvar low = 0, high = ary.length - 1;\n\n\tvar m = 1;\n\tvar operations = [];\n\tvar history = [];\n\n\twhile(m <= high){\n\n\n\t\tfor(var i = low; i <= high; i += 2 * m){\n\t\t\tvar start = i;\n\t\t\tvar mid = i + m - 1;\n\t\t\tvar end = Math.min(high, i + m + m - 1);\n\n\t\t\tvar [hist, ops] = merge(ary, start, mid, end);\n\n\t\t\tary = hist.slice();\n\t\t\thistory.push(hist);\n\t\t\tif(m * 2 <= high){\n\t\t\t\toperations.push(ops);\t\n\t\t\t}else{\n\t\t\t\toperations.push([]);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tm *= 2;\t\n\t}\n\n\treturn [history, operations];\n\n}\n\nconst merge = (input, start, mid, end) => {\n\n\tvar tmp = [];\n\n\tvar i = start, j = mid + 1;\n\tvar operations = Array(end - start + 1).fill(null).map((value, index)=> {return index + start;});\n\n\twhile(i <= mid && j <= end){\n\t\tif(input[i] <= input[j]){\n\t\t\ttmp.push(input[i]);\n\t\t\ti+=1;\n\t\t}else{\n\t\t\ttmp.push(input[j]);\n\t\t\tj+=1;\n\t\t}\n\t}\n\twhile(i <= mid){\n\t\ttmp.push(input[i]);\n\t\ti+=1;\n\t}\n\twhile(j <= end){\n\t\ttmp.push(input[j]);\n\t\tj+=1;\n\t}\n\tfor(var k = start; k <= end; k++){\n\t\tinput[k] = tmp[k - start];\n\t}\n\treturn [input, operations];\n}\n\nexport {bubbleSort, selectionSort, insertionSort, quickSort, mergeSort}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\nimport {bubbleSort, selectionSort, insertionSort, quickSort, mergeSort} from './sort_algorithm.js'\n\nconst animationSpeed = 25;\nconst datas = 100;\nconst bar_colors = ['green', 'reed', 'orange', 'yellow', 'purple', 'gray']\nclass Line extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisHover:false,\n\t\t\tstyle:{\n\t\t\t\tleft:this.props.position,\n\t\t\t\tborderColor:this.props.color,\n\t\t\t\ttop: 600 - parseInt(this.props.value),\n\t\t\t}\n\t\t}\n\t}\n\n\n\thandleMouseOver = () => {\n\t\tthis.setState({\n\t\t\tisHover:true,\n\t\t})\n\t\tconst obj = document.getElementById('item_value')\n\t\tobj.innerHTML = this.props.value;\n\t\tthis.setState({style:{...this.state.style, borderColor:\"#2894FF\"}});\n\t}\n\n\thandleMouseOut = () => {\n\t\tthis.setState({\n\t\t\tisHover:false,\n\t\t})\n\t\tconst obj = document.getElementById('item_value')\n\t\tobj.innerHTML = \"\";\n\t\tthis.setState({style:{...this.state.style, borderColor:this.props.color}});\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div className='vl' style={this.state.style} onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}></div>\n\t\t)\n\t}\t\n\t\n\n\n}\n\nclass SortVisualizer extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlines : null,\n\t\t\thistory : [],\n\t\t\toperations:[],\n\t\t\tisSetUp:false,\n\t\t\tcounter:0,\n\t\t\tcurrentStep:-1,\n\t\t\tisRunning : false,\n\t\t\tselection: \"Bubble_Sort\",\n\n\t\t}\n\t\tdocument.body.style = 'background-color : #4F4F4F';\n\t}\n\n\tselectionChange = () => {\n\t\tconst selection = document.getElementById('algorithm').value;\n\t\tthis.setState({selection: selection});\n\t}\n\n\trandomInput = () => {\n\t\tif(!this.state.isRunning){\n\t\t\tconsole.log(this.state.isRunning);\n\t\t\tvar input = [Array.from({length:datas}, () => Math.floor(Math.random() * 400))];\n\t\t\tvar counter = this.state.counter;\n\t\t\tthis.setState({history:input, counter:counter+1, currentStep:0});\n\t\t}\n\t}\n\n\tanimate = (inputs) => {\n\t\tconst [history, operations] = inputs;\n\t\tthis.setState({history:history, operations:operations}, ()=>{\n\t\t\tfor(let i = 0 ; i < history.length ; i++){\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tthis.setState({currentStep:i});\n\t\t\t\t}, animationSpeed * i);\n\t\t\t}\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.setState({isRunning:false});\n\t\t\t}, animationSpeed * history.length);\n\t\t});\n\t}\n\n\tvisualize = () => {\n\t\tif(!this.state.isRunning){\n\t\t\tthis.setState({currentStep:0, isRunning:true});\n\t\t\t\n\t\t\tlet returnValue = null;\n\t\t\tconst input_array = this.state.history.slice(0, 1)[0];\n\t\t\t\n\t\t\tswitch(this.state.selection){\n\t\t\t\tcase \"Bubble_Sort\":\n\t\t\t\t\treturnValue = bubbleSort(input_array);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Selection_Sort':\n\t\t\t\t\treturnValue = selectionSort(input_array);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Insertion_Sort':\n\t\t\t\t\treturnValue = insertionSort(input_array);;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Quick_Sort':\n\t\t\t\t\treturnValue = quickSort(input_array);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Merge_Sort':\n\t\t\t\t\treturnValue = mergeSort(input_array);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.animate(returnValue);\n\t\t}\n\t}\n\n\trender(){\n\t\tvar lines = null;\n\t\tif(this.state.currentStep !== -1){\n\t\t\tconst input = this.state.history[this.state.currentStep];\n\t\t\tconst operations = this.state.operations[this.state.currentStep];\n\t\t\tlines = input.map((value, index) => {\n\t\t\t\t\t\tlet percentage = 100 / (input.length + 1) * index;\n\t\t\t\t\t\tpercentage = percentage.toString() + \"%\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet key = this.state.counter.toString() + '_' +this.state.currentStep.toString() + '_' + index.toString();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// let color = \"#FFD2D2\";\t\n\t\t\t\t\t\tlet color = bar_colors[index % 6];\n\n\t\t\t\t\t\tif(this.state.isRunning){\n\t\t\t\t\t\t\tif(operations.includes(index)){\n\t\t\t\t\t\t\t\tcolor = \"black\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Line key={key} position={percentage} color={color} value={value}/>\n\t\t\t\t\t\t);\t\n\t\t\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<nav className=\"bg-secondary navbar navbar-expand-lg p-4\">\n\t\t\t\t\t<div className=\"collapse navbar-collapse\">\n\t\t\t\t\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item mx-4 pt-2\">\n\t\t\t\t\t\t\t\t\t\t<select id='algorithm' onChange={()=>{this.selectionChange()}}>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Bubble_Sort\">Bubble Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Insertion_Sort\">Insertion Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Selection_Sort\">Selection Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Quick_Sort\">Quick Sort</option>\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"nav-link text-white\" value=\"Merge_Sort\">Merge Sort</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t<button id=\"random\" onClick={() => this.randomInput()}>Randomize Input</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t<button id=\"visual\" onClick={() => this.visualize()}>Visualize</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t\n\t\t\t\t<div className=\"boundary\">\n\t\t\t\t\t<label>Selection Item Value : <label id='item_value' style={{color:'White'}}></label></label>\n\t\t\t\t\t<li className=\"nav-link\" >\n\t\t\t\t\t\t{lines}\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n\nReactDOM.render(\n\t<SortVisualizer />,\n\tdocument.getElementById('root'),\n);\n\n\n"],"sourceRoot":""}